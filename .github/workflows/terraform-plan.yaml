name: Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  directories:
    name: "Directory-changes"
    runs-on: ubuntu-latest
    steps:
      - uses: theappnest/terraform-monorepo-action@master
        id: directories
        with:
          ignore: |
            aws/**/policies
            aws/**/templates
            aws/**/scripts
      - run: echo ${{ steps.directories.outputs.modules }}
    outputs:
      dirs: ${{ steps.directories.outputs.modules }}
  
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    needs: directories
    strategy:
      matrix:
        directories: ${{ fromJson(needs.directories.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.directories }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLOUD_TEAM_API_TOKEN_PREPROD }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -input=false
        continue-on-error: true

# name: "terraform-plan"

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
#   workflow_dispatch:
#     inputs:
#       working-dir:
#         type: multi-choice
#         description: select the working directory
#         options: 
#         - sns
#         - sqs
  

# jobs:
#   PushToAWS:
#     runs-on: ubuntu-latest
#     env:
#       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#       AWS_REGION: ${{ secrets.AWS_REGION }}


#     steps:
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2

#         with:
#           terraform_version: 0.14.4

#       - name: Terraform Fmt
#         id: fmt
#         run: terraform fmt -check
#         continue-on-error: true
#         working-directory: ${{ github.event.inputs.working-dir }}
      
#       - name: Terraform init
#         id: init
#         run: terraform init
#         working-directory: ${{ github.event.inputs.working-dir }}


      
      # - name: Terraform Init
      #   id: init
      #   run: |
      #     terraform fmt
      #     terraform validate
      #     terraform init ${{ github.event.inputs.working-dir }}

      # - name: Terraform plan
      #   id: plan
      #   run: |
      #     echo ${{ github.event.inputs.working-dir }}
      #     terraform plan ${{ github.event.inputs.working-dir }}

      # - name: Terraform Apply
      #   run: terraform apply -auto-approve
      #   env:
      #     TF_VAR_aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
      #     TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
      #     TF_VAR_jwtSecret: ${{ secrets.JWT_SECRET }}
